<ui:composition template="/templates/template.xhtml"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:p="http://primefaces.org/ui">

	<ui:define name="content">

		<h:form>
			<p:messages id="messages" showDetail="false" autoUpdate="true"
				closable="true" />

			<p:panelGrid>
				<p:row>
					<p:column style="width:35%;">
						<p:dataTable id="productSelectionPanel" widgetVar="productsTable"
							rendered="#{uploadRequisitionController.storehouseSelected}"
							value="#{uploadRequisitionController.products}" lazy="true"
							paginator="true" tableStyle="table-layout: auto;"
							paginatorTemplate="{RowsPerPageDropdown} {FirstPageLink} {PreviousPageLink} {CurrentPageReport} {NextPageLink} {LastPageLink}"
							rowsPerPageTemplate="20,50,100" var="product" rows="20"
							scrollable="true" scrollHeight="600">
							<f:facet name="header">
								<p:outputPanel>
									<p:commandButton onclick="PF('productsTable').clearFilters();"
										value="Limpiar Filtros" process="@form:productSelectionPanel" />
								</p:outputPanel>
							</f:facet>
							<p:column headerText="Codigo" filterBy="#{product.code}"
								filterMatchMode="contains">
								<h:outputText value="#{product.code}" />
							</p:column>
							<p:column headerText="Marca" filterBy="#{product.brand}"
								filterMatchMode="contains">
								<h:outputText value="#{product.brand}" />
							</p:column>
							<p:column headerText="Producto" filterBy="#{product.material}"
								filterMatchMode="contains">
								<h:outputText value="#{product.material}" />
							</p:column>
							<p:column headerText="Accion">
								<p:commandButton icon="ui-icon-plus"
									rendered="#{not uploadRequisitionController.productIsSelected(product.id)}"
									actionListener="#{uploadRequisitionController.addSelectedProduct(product.id)}"
									process="@form:productSelectionPanel @form:selectedProductsPanel"
									update="@form:selectedProductsPanel @form:productSelectionPanel @form:actionButtons" />
								<p:commandButton icon="ui-icon-minus"
									rendered="#{uploadRequisitionController.productIsSelected(product.id)}"
									actionListener="#{uploadRequisitionController.removeSelectedProduct(product.id)}"
									process="@form:productSelectionPanel @form:selectedProductsPanel"
									update="@form:selectedProductsPanel @form:productSelectionPanel @form:actionButtons" />
							</p:column>
						</p:dataTable>
					</p:column>
					<p:column style="width:60%;">
						<p:panelGrid>
							<p:row>
								<p:column>
									<h:outputLabel value="Seleccione el tipo de movimiento" />
								</p:column>
								<p:column>
									<p:selectOneRadio
										value="#{uploadRequisitionController.selectedType}">
										<f:selectItems
											value="#{uploadRequisitionController.deliverySelectItems}" />
										<p:ajax async="true" update="@form" />
									</p:selectOneRadio>
								</p:column>
							</p:row>

							<p:row rendered="#{uploadRequisitionController.renderForm}">
								<p:column>
									<h:outputLabel value="Seleccione la bodega" />
								</p:column>
								<p:column>
									<p:selectOneRadio
										value="#{uploadRequisitionController.storehouseId}">
										<f:selectItems
											value="#{uploadRequisitionController.storehouseSelectItems}" />
										<p:ajax async="true" update="@form" />
									</p:selectOneRadio>
								</p:column>
							</p:row>

							<p:row
								rendered="#{uploadRequisitionController.storehouseSelected}">
								<p:column>
									<h:outputLabel value="Numero Requisicion Fisica" />
								</p:column>
								<p:column>
									<p:inputText
										value="#{uploadRequisitionController.physicalRequisition}" />
								</p:column>
							</p:row>

							<p:row
								rendered="#{uploadRequisitionController.storehouseSelected}">
								<p:column
									rendered="#{uploadRequisitionController.getRenderFor('whoAsked')}">
									<h:outputLabel
										value="#{uploadRequisitionController.getLabelFor('whoAsked')}" />
								</p:column>
								<p:column
									rendered="#{uploadRequisitionController.getRenderFor('whoAsked')}">
									<p:inputText value="#{uploadRequisitionController.whoAsked}"
										required="true"
										requiredMessage="#{uploadRequisitionController.getLabelFor('whoAsked')}: No puede estar vacio" />
								</p:column>

								<p:column
									rendered="#{uploadRequisitionController.getRenderFor('whoReceived')}">
									<h:outputLabel
										value="#{uploadRequisitionController.getLabelFor('whoReceived')}" />
								</p:column>
								<p:column
									rendered="#{uploadRequisitionController.getRenderFor('whoReceived')}">
									<p:inputText value="#{uploadRequisitionController.whoReceived}"
										required="true"
										requiredMessage="#{uploadRequisitionController.getLabelFor('whoReceived')}: No puede estar vacio" />
								</p:column>
							</p:row>

							<p:row
								rendered="#{uploadRequisitionController.storehouseSelected}">
								<p:column
									rendered="#{uploadRequisitionController.getRenderFor('askDate')}">
									<h:outputLabel
										value="#{uploadRequisitionController.getLabelFor('askDate')}" />
								</p:column>
								<p:column
									rendered="#{uploadRequisitionController.getRenderFor('askDate')}">
									<p:calendar value="#{uploadRequisitionController.askDate}"
										required="true"
										requiredMessage="#{uploadRequisitionController.getLabelFor('askDate')}: No puede estar vacio" />
								</p:column>
								<p:column
									rendered="#{uploadRequisitionController.getRenderFor('leadTime')}">
									<h:outputLabel
										value="#{uploadRequisitionController.getLabelFor('leadTime')}" />
								</p:column>
								<p:column
									rendered="#{uploadRequisitionController.getRenderFor('leadTime')}">
									<p:inputText value="#{uploadRequisitionController.leadTime}"
										required="true"
										requiredMessage="#{uploadRequisitionController.getLabelFor('leadTime')}: No puede estar vacio" />
								</p:column>
							</p:row>
							<p:row
								rendered="#{uploadRequisitionController.storehouseSelected}">
								<p:column
									rendered="#{uploadRequisitionController.getRenderFor('deliveryDate')}">
									<h:outputLabel
										value="#{uploadRequisitionController.getLabelFor('deliveryDate')}" />
								</p:column>
								<p:column
									rendered="#{uploadRequisitionController.getRenderFor('deliveryDate')}">
									<p:calendar value="#{uploadRequisitionController.deliveryDate}"
										required="true"
										requiredMessage="#{uploadRequisitionController.getLabelFor('deliveryDate')}: No puede estar vacio" />
								</p:column>

								<p:column
									rendered="#{uploadRequisitionController.getRenderFor('deliveryPoint')}">
									<h:outputLabel
										value="#{uploadRequisitionController.getLabelFor('deliveryPoint')}" />
								</p:column>
								<p:column
									rendered="#{uploadRequisitionController.getRenderFor('deliveryPoint')}">
									<p:inputText
										value="#{uploadRequisitionController.deliveryPoint}"
										required="true"
										requiredMessage="#{uploadRequisitionController.getLabelFor('deliveryPoint')}: No puede estar vacio" />
								</p:column>
							</p:row>

							<p:row
								rendered="#{uploadRequisitionController.storehouseSelected}">
								<p:column
									rendered="#{uploadRequisitionController.getRenderFor('cities')}">
									<h:outputLabel
										value="#{uploadRequisitionController.getLabelFor('cities')}" />
								</p:column>
								<p:column
									rendered="#{uploadRequisitionController.getRenderFor('cities')}">
									<p:inputText value="#{uploadRequisitionController.cities}"
										required="true"
										requiredMessage="#{uploadRequisitionController.getLabelFor('cities')}: No puede estar vacio" />
								</p:column>

								<p:column
									rendered="#{uploadRequisitionController.getRenderFor('status')}">
									<h:outputLabel
										value="#{uploadRequisitionController.getLabelFor('status')}" />
								</p:column>
								<p:column
									rendered="#{uploadRequisitionController.getRenderFor('status')}">
									<p:inputText value="#{uploadRequisitionController.status}"
										required="true"
										requiredMessage="#{uploadRequisitionController.getLabelFor('status')}: No puede estar vacio" />
								</p:column>
							</p:row>
						</p:panelGrid>
						<p:panel id="selectedProductsPanel"
							rendered="#{uploadRequisitionController.storehouseSelected}">
							<p:dataTable tableStyle="width:auto; max-width:100%;"
								value="#{uploadRequisitionController.selectedProducts}"
								var="product">
								<p:column headerText="Acciones">
									<p:commandButton icon="ui-icon-minus"
										actionListener="#{uploadRequisitionController.removeSelectedProduct(product.id)}"
										process="@this @form:selectedProductsPanel"
										update="@form:selectedProductsPanel @form:productSelectionPanel" />
								</p:column>
								<p:column headerText="Codigo">
									<h:outputText value="#{product.code}" />
								</p:column>
								<p:column headerText="#Lote">
									<h:inputText value="#{product.lot.lotNumber}" rendered="#{not uploadRequisitionController.isDespacho()}" />
									<p:selectOneMenu value="#{product.lot.id}">
										<f:selectItem itemLabel="Seleccione Uno" itemValue="0" />
										<f:selectItems value="#{product.lots}" var="lot" itemLabel="#{lot.lotNumber}" itemValue="#{lot.id}"></f:selectItems>
										<p:ajax process="@form:selectedProductsPanel" update="@form:selectedProductsPanel" listener="#{product.lotSelected()}" />
									</p:selectOneMenu>
								</p:column>
								<p:column headerText="Fechas">
									Caducidad: <p:calendar value="#{product.lot.expirationDate}" rendered="#{not uploadRequisitionController.isDespacho()}" />
										<h:outputText value="#{product.lot.expirationDate}" rendered="#{uploadRequisitionController.isDespacho()}" /> 
									<br />
									Produccion: <p:calendar value="#{product.lot.elaborationDate}" rendered="#{not uploadRequisitionController.isDespacho()}" />
										<h:outputText value="#{product.lot.elaborationDate}" rendered="#{uploadRequisitionController.isDespacho()}" />
								</p:column>
								<p:column headerText="Cantidades">
									En Bodega:  <h:outputText value="#{product.currentQuantity}" /><br />
									Requisicion: <h:inputText value="#{product.quantity}" />
								</p:column>
							</p:dataTable>
						</p:panel>
						<p:panelGrid
							rendered="#{uploadRequisitionController.storehouseSelected}"
							id="actionButtons">
							<p:row>
								<p:column>
									<p:commandButton value="Guardar Movimiento"
										actionListener="#{uploadRequisitionController.save()}"
										update="@form" />
								</p:column>
							</p:row>
						</p:panelGrid>
					</p:column>
				</p:row>
			</p:panelGrid>

		</h:form>

	</ui:define>
</ui:composition>